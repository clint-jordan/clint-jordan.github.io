---
import type { MetaData } from "../../site.config";

export interface Props {
  configKey?: string;
  type?: string;
}

const { 
  configKey,
  type
} = Astro.props;

import { siteConfig } from "../../site.config"
const baseUrl = import.meta.env.BASE_URL;
const k = configKey && configKey in siteConfig ? configKey : "global";
const config = siteConfig[k as keyof typeof siteConfig] as MetaData;
const allowSearch = config.allowSearch !== undefined ? config.allowSearch : true;
---

<title>{config.title ?? siteConfig.global.title}{config.titleSuffix ? ` • ${config.titleSuffix}` : ''}</title>
<meta
  name="description"
  content={config.longDescription ?? config.description}
/>
<meta property="og:title" content={`${config.title}${config.titleSuffix ? ` • ${config.titleSuffix}` : ''}`} />
<meta property="og:description" content={config.description} />
{config.keywords && (
  <meta name="keywords" content={config.keywords.join(", ")} />
)}
{!allowSearch && (
  <meta name="robots" content="noindex, nofollow, noarchive, nosnippet, noimageindex" />
)}
<meta property="og:url" content={config.url} />
<meta name="twitter:card" content={type} />
<meta name="twitter:title" content={`${config.title}${config.titleSuffix ? ` • ${config.titleSuffix}` : ''}`} />
<meta name="twitter:description" content={config.description} />
{config.cardImage && (
  <meta name="twitter:image" content={config.cardImage} />
)}
<meta http-equiv="content-language" content="en" />
<meta name="language" content="English" />
<link rel="canonical" href={`${baseUrl}${config.url}`} />
