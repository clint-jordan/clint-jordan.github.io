---
import { getCollection } from "astro:content";
import PostSnippet from "../PostSnippet.astro";
import Anchor from "../common/Anchor.astro";
import { siteConfig } from "../../site.config";

const baseUrl = import.meta.env.BASE_URL;

// Get all projects, filter for featured ones, and sort by updated date (most recent first)
const allProjects = await getCollection("projects");
const featuredProjects = allProjects
  .filter((project) => project.data.featured === true)
  .map((project) => ({
    ...project.data,
    url: `${baseUrl}/projects/${project.data.slug}`,
  }))
  .sort((a, b) => {
    // Sort by updated date, fallback to published date, then by title
    const dateA = a.updated || a.published || new Date(0);
    const dateB = b.updated || b.published || new Date(0);
    return dateB.getTime() - dateA.getTime();
  })
  .slice(0, 5); // Get only the 5 most recent featured projects
---

{featuredProjects.length > 0 && (
  <div class="space-y-0 mb-20">
    <div class="flex justify-between items-center pb-5">
      <h2 class="text-3xl sm:text-4xl font-display theme-text">Featured Projects</h2>
      <Anchor url={`${baseUrl}/projects`} class="theme-accent hover:theme-text transition-colors">
        View all projects â†’
      </Anchor>
    </div>
    
    <div class="space-y-6">
      {featuredProjects.map((project) => (
        <PostSnippet
          title={project.title}
          description={project.description}
          url={project.url}
          tags={project.tags}
          published={project.published}
          updated={project.updated}
        />
      ))}
    </div>
  </div>
)}
